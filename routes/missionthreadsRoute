const { sequelize, Soldiers, Squads, Loadouts, Missions, MissionThreads } = require('../models');
const express = require('express');

const route = express.Router();
route.use(express.json());
route.use(express.urlencoded({ extended: true }));


route.get('/', (req, res) => {

    MissionThreads.findAll({
        //mozda dodati squad i loadout zbog soldiera?
        include: ['missionThread', 'sender'],
         })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );
    
});

route.get('/:id', (req, res) => {

    MissionThreads.findOne({ where: { id: req.params.id },
        include: ['missionThread', 'sender'],
         })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );

});

route.get('/soldier/:id', (req, res) => {

    MissionThreads.findAll({ where: { SoldierID: req.params.SoldierID },
        include: ['missionThread', 'sender'],
         })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );

});

route.get('/mission/:id', (req, res) => {

    MissionThreads.findAll({ where: { MissionID: req.params.MissionID },
        include: ['missionThread', 'sender'],
         })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );

});

route.post('/', (req, res) => {
    
    MissionThreads.create({ 
        message: req.body.message,
        timestamp: req.body.timestamp, 
        MissionID: req.body.MissionID, 
        SoldierID: req.body.SoldierID,
        recieved: req.body.recieved
     })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );

});

route.put('/:id', (req, res) => {
    
    MissionThreads.findOne({ where: { id: req.params.id } })
        .then( usr => {
            usr.message = req.body.message;
            usr.timestamp = req.body.timestamp;
            usr.MissionID = req.body.MissionID;
            usr.SoldierID = req.body.SoldierID;
            usr.recieved = req.body.recieved;

            usr.save()
                .then( rows => res.json(rows) )
                .catch( err => res.status(500).json(err) );
        })
        .catch( err => res.status(500).json(err) );

});

route.delete('/:id', (req, res) => {

    MissionThreads.findOne({ where: { id: req.params.id } })
        .then( usr => {
            usr.destroy()
                .then( rows => res.json(rows) )
                .catch( err => res.status(500).json(err) );
        })
        .catch( err => res.status(500).json(err) );
});

module.exports = route;