const { sequelize, Squads } = require('../models');
const { newSquadValidation, updateSquadValidation } = require("../joi-validation.js");
const express = require('express');

const route = express.Router();
route.use(express.json());
route.use(express.urlencoded({ extended: true }));


route.get('/', (req, res) => {

    Squads.findAll()
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );
    
});

route.get('/:id', (req, res) => {

    Squads.findOne({ where: { id: req.params.id } })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );

});

route.post('/', (req, res) => {

    const validEntry = newSquadValidation.validate(req.body);
  
    if(validEntry.error){
        res.status(422).json({ msg: validEntry.error.message })
    }
    
    Squads.create({ name: req.body.name, type: req.body.type, status: req.body.status })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );

});

route.put('/:id', (req, res) => {

    const validEntry = updateSquadValidation.validate(req.body);
  
    if(validEntry.error){
        res.status(422).json({ msg: validEntry.error.message })
    }
    
    Squads.findOne({ where: { id: req.params.id } })
        .then( usr => {
            usr.name = req.body.name;
            usr.type = req.body.type;
            usr.status = req.body.status;

            usr.save()
                .then( rows => res.json(rows) )
                .catch( err => res.status(500).json(err) );
        })
        .catch( err => res.status(500).json(err) );

});

route.delete('/:id', (req, res) => {

    Squads.findOne({ where: { id: req.params.id } })
        .then( usr => {
            usr.destroy()
                .then( rows => res.json(rows) )
                .catch( err => res.status(500).json(err) );
        })
        .catch( err => res.status(500).json(err) );
});


/*
route.get('/messages', (req, res) => {

    Messages.findAll({ include: ['user'] })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );
    
});

route.get('/messages/:id', (req, res) => {

    Messages.findOne({ where: { id: req.params.id }, include: ['user'] })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );

});

route.post('/messages', (req, res) => {

    Messages.create({ body: req.body.body, userId: req.body.userId })
        .then( rows => res.json(rows) )
        .catch( err => res.status(500).json(err) );

});

route.put('/messages/:id', (req, res) => {
    
    Messages.findOne({ where: { id: req.params.id }, include: ['user'] })
        .then( msg => {
            msg.body = req.body.body;

            msg.save()
                .then( rows => res.json(rows) )
                .catch( err => res.status(500).json(err) );
        })
        .catch( err => res.status(500).json(err) );

});

route.delete('/messages/:id', (req, res) => {

    Messages.findOne({ where: { id: req.params.id }, include: ['user'] })
        .then( msg => {
            msg.destroy()
                .then( rows => res.json(rows) )
                .catch( err => res.status(500).json(err) );
        })
        .catch( err => res.status(500).json(err) );
});
*/

module.exports = route;